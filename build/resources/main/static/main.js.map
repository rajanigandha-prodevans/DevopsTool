{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/custom-http-interceptor.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.service.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/forgetpassword/forgetpassword.component.css","webpack:///./src/app/forgetpassword/forgetpassword.component.html","webpack:///./src/app/forgetpassword/forgetpassword.component.ts","webpack:///./src/app/forgetpassword/password.service.ts","webpack:///./src/app/forgetpasswordsuccess/forgetpasswordsuccess.component.css","webpack:///./src/app/forgetpasswordsuccess/forgetpasswordsuccess.component.html","webpack:///./src/app/forgetpasswordsuccess/forgetpasswordsuccess.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/header1/createassessment.service.ts","webpack:///./src/app/header1/header1.component.css","webpack:///./src/app/header1/header1.component.html","webpack:///./src/app/header1/header1.component.ts","webpack:///./src/app/login/authguard.guard.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/login/user.ts","webpack:///./src/app/popup/popup.component.css","webpack:///./src/app/popup/popup.component.html","webpack:///./src/app/popup/popup.component.ts","webpack:///./src/app/questionpage/questionpage.component.css","webpack:///./src/app/questionpage/questionpage.component.html","webpack:///./src/app/questionpage/questionpage.component.ts","webpack:///./src/app/questionpage/questionpage.service.ts","webpack:///./src/app/register/register-user.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/register/registration.service.ts","webpack:///./src/app/resetpassword/resetpassword.component.css","webpack:///./src/app/resetpassword/resetpassword.component.html","webpack:///./src/app/resetpassword/resetpassword.component.ts","webpack:///./src/app/result/result.component.css","webpack:///./src/app/result/result.component.html","webpack:///./src/app/result/result.component.ts","webpack:///./src/app/result/result.service.ts","webpack:///./src/app/successfullreset/successfullreset.component.css","webpack:///./src/app/successfullreset/successfullreset.component.html","webpack:///./src/app/successfullreset/successfullreset.component.ts","webpack:///./src/app/terms/terms.component.css","webpack:///./src/app/terms/terms.component.html","webpack:///./src/app/terms/terms.component.ts","webpack:///./src/app/toast.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PopupComponent } from './popup/popup.component';\nimport { ResultComponent } from './result/result.component';\nimport { ForgetpasswordComponent } from './forgetpassword/forgetpassword.component';\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\nimport { QuestionpageComponent } from './questionpage/questionpage.component';\nimport { AuthguardGuard } from './login/authguard.guard';\nimport { SuccessfullresetComponent } from './successfullreset/successfullreset.component';\nimport { ForgetpasswordsuccessComponent } from './forgetpasswordsuccess/forgetpasswordsuccess.component';\nimport { TermsComponent } from './terms/terms.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthguardGuard] },\n  { path: 'popup', component: PopupComponent },\n  { path: 'assessment/:assessment_id/category/:category_id', component: QuestionpageComponent, canActivate: [AuthguardGuard] },\n  { path: 'assessment/:assessment_id/result', component: ResultComponent, canActivate: [AuthguardGuard] },\n  { path: 'resetpassword/:token', component: ResetpasswordComponent },\n  { path: 'successfullreset', component: SuccessfullresetComponent },\n  { path: 'forgetpasswordsuccess', component: ForgetpasswordsuccessComponent },\n  { path: 'terms', component: TermsComponent },\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    [RouterModule.forRoot(routes)],\n  ],\n  declarations: [],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'devops';\n\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule} from '@angular/router'\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PopupComponent } from './popup/popup.component';\nimport { ResultComponent } from './result/result.component';\nimport { ForgetpasswordComponent } from './forgetpassword/forgetpassword.component';\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\nimport { QuestionpageComponent } from './questionpage/questionpage.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { Header1Component } from './header1/header1.component';\n\n// Http client module for performing the HTTP requests\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n// Performing the form operation using form mdule\nimport { FormsModule } from '@angular/forms';\n\n// This import used for the Login service\nimport { LoginService } from './login/login.service';\n\n// This import is added for the authentication guard\nimport { AuthguardGuard } from './login/authguard.guard';\n\n// This import statement helps to add the hedders in the request body\nimport { CustomHttpInterceptor } from './custom-http-interceptor';\n\n// This import is used for enabling the cookies in application\nimport { CookieService } from 'ngx-cookie-service';\n\n// Requred for toster animations\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// Ngx-toastr service\nimport { ToastrModule } from 'ngx-toastr';\nimport { ResultService } from './result/result.service';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { SuccessfullresetComponent } from './successfullreset/successfullreset.component';\nimport { ForgetpasswordsuccessComponent } from './forgetpasswordsuccess/forgetpasswordsuccess.component';\nimport { TermsComponent } from './terms/terms.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    PopupComponent,\n    ResultComponent,\n    ForgetpasswordComponent,\n    ResetpasswordComponent,\n    QuestionpageComponent,\n    Header1Component,\n    SuccessfullresetComponent,\n    ForgetpasswordsuccessComponent,\n    TermsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    LoginService,\n    ResultService,\n    AuthguardGuard,\n    CookieService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CustomHttpInterceptor,\n      multi: true\n    },\n    {\n      provide:LocationStrategy, \n      useClass:HashLocationStrategy\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { LoginService } from \"./login/login.service\";\n\n@Injectable()\nexport class CustomHttpInterceptor implements HttpInterceptor {\n    constructor(private login_service: LoginService){}\n\n    /**\n     * This intersepter add the information into the header for each and every request\n     * @param request - request made for the \n     * @param next - new request\n     */\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const dummyrequest = request.clone({  \n            setHeaders: {  \n                'Authorization': this.login_service.getAuthToken(),\n                'X-Requested-With':'XMLHttpRequest',  \n                'content-type': 'application/json'  \n            }  \n        })  \n        console.log(\"Cloned Request\");   \n        console.log(dummyrequest);   \n        return next.handle(dummyrequest); \n      }\n\n    \n}\n","module.exports = \".content {\\n  height: 600px;\\n}\\n\\n/* Set gray background color and 100% height */\\n\\n.sidenav {\\n  background-color: white;\\n  height: 100%;\\n}\\n\\n/* Set black background color, white text and some padding */\\n\\n/* On small screens, set height to 'auto' for sidenav and grid */\\n\\n@media screen and (max-width: 767px) {\\n  .sidenav {\\n    height: auto;\\n    padding: 15px;\\n  }\\n\\n  .content {\\n    height: auto;\\n  }\\n}\\n\\n.container {\\n\\n  height: auto;\\n}\\n\\n.nav-stacked > li + li {\\n  margin-top: 2px;\\n}\\n\\n.well {\\n  background-color: white;\\n  margin: 8px;\\n}\\n\\n#boxshadow {\\n  position: relative;\\n  box-shadow: 1px 2px 4px rgba(0, 0, 0, .5);\\n  padding: 10px;\\n\\n}\\n\\n.col-md-2 {\\n  width: 19.666667%;\\n}\\n\\n.row {\\n  margin-right: 15px;\\n  margin-left: 10px;\\n  margin-top: 10px;\\n}\\n\\n.label-info {\\n  background-color: #337ab7;\\n}\\n\\n/*Properties of Status label*/\\n\\n.label {\\n  display: inline;\\n  padding: 0.2em .6em .3em;\\n  font-size: 75%;\\n  font-weight: 700;\\n  line-height: 3;\\n  color: #fff;\\n  text-align: center;\\n  white-space: nowrap;\\n  vertical-align: baseline;\\n  border-radius: .25em;\\n}\\n\\n/*To Change the Panel Padding*/\\n\\n.panel-body {\\n  padding: 15px;\\n  padding-bottom: 0px;\\n}\\n\\n.col-sm-6 {\\n  width: 68%;\\n}\\n\\n.col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9 {\\n  position: relative;\\n  min-height: 1px;\\n  padding-right: 15px;\\n  padding-left: 0px;\\n}\\n\\n#boxshadow[_ngcontent-c2] {\\n  position: relative;\\n  box-shadow: 0px 0px 2px rgba(0, 0, 0, .2);\\n  padding: 10px;\\n}\\n\\n.panel-heading {\\n  margin-right: 0;\\n  margin-left: 0px;\\n  margin-top: 0px;\\n}\\n\\n.panel-title {\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  font-size: 16px;\\n  color: white;\\n}\\n\\n.center {\\n  margin: auto;\\n  width: 150px;\\n  padding: 5px;\\n}\\n\\n/* The sidebar menu */\\n\\n.sidenav {\\n  padding: 20px;\\n  margin-right: 20px;\\n  border: #e5e5e5 solid 1px;\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n\\n/* Style page content */\\n\\n.main {\\n  margin-left: 15em; /* Same as the width of the sidebar */\\n  padding: 0px 10px;\\n}\\n\"","module.exports = \"<app-header1></app-header1>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row content\\\">\\n        <div class=\\\"col-sm-3 \\\">\\n          <div class=\\\"sidenav\\\">\\n            <div class=\\\"center\\\">\\n              <img src=\\\"assets/images/profile_logo.png\\\" style=\\\"width: 150px;height: 150px;\\\">\\n            </div>\\n\\n            <!-- Displaying the user details -->\\n            <ul class=\\\"nav nav-pills nav-stacked\\\">\\n                <hr/>\\n                <li><strong>Name: </strong>{{ user.first_name }} {{ user.last_name }}</li>\\n                <li><strong>Email: </strong>{{ user.user_email }}</li>\\n                <li><strong>Company: </strong>{{ user.companyName }}</li>\\n            </ul>\\n\\n        </div>\\n        </div>\\n        <!-- Displaying the assessment created by the user -->\\n        <div class=\\\"col-sm-8\\\" style=\\\"margin-right: 25px;\\\">\\n            <div *ngFor=\\\"let assessment of assessment_list\\\" class=\\\"panel panel-primary\\\" >\\n                <!-- Section to display the assessment name and date -->\\n\\n                <div class=\\\"panel-heading row\\\">\\n\\n                    <div class=\\\"col-md-8\\\" *ngIf=\\\" assessment.assessmentStatus == 'Done' \\\" >\\n                        <a [routerLink]=\\\"['/assessment', assessment.assessment_id,'result']\\\"> <h3 class=\\\"panel-title\\\">Name: {{ assessment.assessment_name }}</h3></a>\\n\\n                    </div>\\n\\n                    <div class=\\\"col-md-8\\\" *ngIf=\\\" assessment.assessmentStatus != 'Done' \\\">\\n                        <a [routerLink]=\\\"['/assessment', assessment.assessment_id,'category',1]\\\"> <h3 class=\\\"panel-title\\\">Name:\\n                                {{ assessment.assessment_name }}</h3></a>\\n\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <h3 class=\\\"panel-title\\\">Date: {{ assessment.created_date | date:'dd MMM, yyyy' }}</h3>\\n                    </div>\\n                </div>\\n                <!-- Displaying the discription and status of the progress -->\\n                <div class=\\\"panel-body\\\">\\n                    <p><b>Description:</b> {{ assessment.assessment_description }}</p>\\n                    <!-- Block of code if the status is done -->\\n                    <div class=\\\"progress\\\" *ngIf=\\\" assessment.assessmentStatus == 'Done' \\\">\\n                        <div class=\\\"progress-bar progress-bar-info progress-bar-striped\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"45\\\" aria-valuemin=\\\"0\\\"\\n                            aria-valuemax=\\\"100\\\" style=\\\"width: 100%\\\">\\n                            Done\\n                        </div>\\n                    </div>\\n                    <!-- Block of code if the status is in-progress -->\\n                    <div class=\\\"progress\\\" *ngIf=\\\" assessment.assessmentStatus == 'in progress' \\\">\\n                        <div class=\\\"progress-bar progress-bar-warning progress-bar-striped\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\"\\n                            aria-valuemax=\\\"100\\\" style=\\\"width: 60%\\\">\\n                            In-progress\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login/login.service';\nimport { UserInfo, DashboardService, AssessmentResponse } from './dashboard.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  // Object to bind the information\n  user:UserInfo = new UserInfo();\n\n  // AssessmentResponse array to display\n  assessment_list: AssessmentResponse[];\n\n  constructor(private login: LoginService, private dashboard_service: DashboardService) { \n    \n  }\n\n  ngOnInit() {\n    console.info(\"Logged User : \",this.login.getLoggedUser());\n    \n    // Getting the user infromation using email\n    this.dashboard_service.getUser(this.login.getLoggedUser()).subscribe(\n      data =>{\n        this.user = data;\n        console.info('User Information',data);\n      }, \n      // If any error present\n      (error: HttpErrorResponse) => {\n        if (error == null)\n          console.info(\"Data inserted successfully\");\n        else {\n          // Parsing the error codes and sending the appropriate responses\n          if (error.status == 404 || error.status == 504) {\n            console.error(\"Server is not responding!!!\");\n          } else if (error.status == 401 || error.status == 403) {\n            console.error( \"Login failed\");\n          }\n        }\n      }\n    );\n\n    // Fetching the all assessments for the user\n    this.dashboard_service.getAllAssessments(this.login.getLoggedUser()).subscribe(\n      data =>{\n        this.assessment_list = data;\n        console.info('User Information',data);\n      }, \n      // If any error present\n      (error: HttpErrorResponse) => {\n        if (error == null)\n          console.info(\"Data inserted successfully\");\n        else {\n          // Parsing the error codes and sending the appropriate responses\n          if (error.status == 404 || error.status == 504) {\n            console.error(\"Server is not responding!!!\");\n          } else if (error.status == 401 || error.status == 403) {\n            console.error( \"Login failed\");\n          }\n        }\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { CATCH_ERROR_VAR } from '@angular/compiler/src/output/output_ast';\nimport { catchError } from 'rxjs/operators';\n\nexport class UserInfo {\n  user_id: number;\n  user_email: string;\n  first_name: string;\n  last_name: string;\n  companyName: string;\n  companySize: string;\n  country: string;\n  industryType: string;\n  links: any;\n}\n\n// Interface for the assessment response\nexport interface AssessmentResponse {\n  assessmentStatus: string;\n  assessment_description: string;\n  assessment_id: number;\n  assessment_name: string;\n  created_date: Date;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Getting the user information using email address\n   * @param email - user id\n   */\n  public getUser(user_id: number) {\n    return this.http.get<UserInfo>(\"/api/users/\" + user_id)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * Get all assessment for a perticular user\n   * @param user_id - user unique id\n   */\n  public getAllAssessments(user_id: number){\n    return this.http.get<AssessmentResponse[]>(\"/api/users/\"+user_id+\"/assessments\")\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      error);\n  }\n}\n","module.exports = \"#footer {\\n    /* bottom: 0; */\\n    width: 100%;\\n    /* position: absolute; */\\n    height:60px;\\n    background-color: black;\\n}\\n    .footer-block {\\n        \\n       \\n        color: white;\\n     \\n    }\\n    body {\\n        margin-bottom: 10px;\\n      }\\n    .Style Attribute {\\n        text-align: left;\\n    }\\n    .element.style {\\n        text-align: left;\\n    }\\n    p {\\n        font-family: ubuntu;\\n    }\"","module.exports = \"\\n  <div id=\\\"footer\\\" class=\\\"container-fluid footer-block\\\" style=\\\"background-color: #1a1a1a;height: 60px;\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n    <p    style=\\\"text-align:left;margin-top: 20px;\\\">DevOps Assessment Tool</p></div>\\n    <div class=\\\" col-md-6\\\">\\n    <p    style=\\\"text-align:right;margin-top: 20px;\\\">Copyright 2018 Prodevans | All Rights Reserved</p></div>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".form-gap {\\n    padding-top: 70px;\\n}\"","module.exports = \"<app-header></app-header>\\n <div class=\\\"form-gap\\\" ></div>\\n <div class=\\\"container\\\">\\n   <div class=\\\"row\\\" style=\\\"margin-bottom: 70px;\\\" >\\n     <div class=\\\"col-md-4 col-md-offset-4\\\">\\n             <div class=\\\"panel panel-default\\\">\\n               <div class=\\\"panel-body\\\" style=\\\"background-color: #74aee0;\\\">\\n                 <div class=\\\"text-center\\\">\\n                   <h3><i class=\\\"fa fa-lock fa-4x\\\"></i></h3>\\n                   <h2 class=\\\"text-center\\\">Forgot Password?</h2>\\n                   <p>You can reset your password here.</p>\\n                   <div class=\\\"panel-body\\\">\\n     \\n                     <form id=\\\"register-form\\\" role=\\\"form\\\" autocomplete=\\\"off\\\" class=\\\"form\\\" method=\\\"post\\\">\\n     \\n                       <div class=\\\"form-group\\\">\\n                         <div class=\\\"input-group\\\">\\n                           <span class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-envelope color-blue\\\"></i></span>\\n                           <input id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"email address\\\" class=\\\"form-control\\\"  type=\\\"email\\\" >\\n                         </div>\\n                       </div>\\n                       <div class=\\\"form-group\\\">\\n                         <input name=\\\"recover-submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" value=\\\"Reset Password\\\" type=\\\"submit\\\">\\n                       </div>\\n                       \\n                       <input type=\\\"hidden\\\" class=\\\"hide\\\" name=\\\"token\\\" id=\\\"token\\\" value=\\\"\\\"> \\n                     </form>\\n     \\n                   </div>\\n                 </div>\\n               </div>\\n             </div>\\n           </div>\\n   </div>\\n </div>\"","import { Component, OnInit } from '@angular/core';\nimport { PasswordService } from './password.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ToastService } from '../toast.service';\n\n@Component({\n  selector: 'app-forgetpassword',\n  templateUrl: './forgetpassword.component.html',\n  styleUrls: ['./forgetpassword.component.css']\n})\nexport class ForgetpasswordComponent implements OnInit {\n\n  \n\n  constructor(private password_service: PasswordService, private route: Router, private toast: ToastService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordService {\n\n  constructor(private http: HttpClient, private cookie: CookieService) { }\n\n  /**\n   * API Calling for sending the password reset link to user email address.\n   * @param _email user mail address\n   */\n  sendPasswordLink(_email: string) {\n    return this.http.post('/api/forgetpassword', {email: _email})\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  /**\n   * API Call for the reset password\n   * @param token token generated form the user\n   * @param password new password for the user\n   */\n  resetPassword( token: string, password: string) {\n    return this.http.put('/api/forgetpassword', {token: token, password: password})\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      error);\n  }\n}\n","module.exports = \".test {\\n    \\n    margin: 150px;\\n}\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"col-md-12 test\\\">\\n<h2 style=\\\"font-family: ubuntu;color: rgb(109, 162, 211);\\\"><b>A link to reset your password has been sent to your registered email.</b>\\n</h2>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgetpasswordsuccess',\n  templateUrl: './forgetpasswordsuccess.component.html',\n  styleUrls: ['./forgetpasswordsuccess.component.css']\n})\nexport class ForgetpasswordsuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-flud\\\" >\\n      <!-- Brand and toggle get grouped for better mobile display -->\\n      <div class=\\\"navbar-header\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n              <span class=\\\"sr-only\\\">Toggle navigation</span>\\n              <span class=\\\"icon-bar\\\"></span>\\n              <span class=\\\"icon-bar\\\"></span>\\n              <span class=\\\"icon-bar\\\"></span>\\n          </button>\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n            <img src=\\\"assets/images/finalLogo.png\\\" style=\\\"width: 200px;\\\">\\n          </a>\\n      </div>\\n\\n      <!-- Collect the nav links, forms, and other content for toggling -->\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <li>\\n                <a [routerLink]=\\\"['/login']\\\">Login</a>\\n            </li>\\n            <li>\\n                <a [routerLink]=\\\"['/register']\\\" >Registration</a>\\n            </li>\\n            </ul>\\n      </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '../../../node_modules/@angular/common/http';\nimport { catchError } from '../../../node_modules/rxjs/operators';\nimport { throwError } from '../../../node_modules/rxjs';\nimport { LoginService } from '../login/login.service';\n\nexport class CreateAssessmentInfo{\n  assessment_description: string;\n  assessment_id: number;\n  assessment_name: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateassessmentService {\n\n  private user_id: number = 0;\n  constructor(private http: HttpClient, private login_service: LoginService) {\n    this.user_id = login_service.getLoggedUser();\n   }\n\n\n  /**\n   * Getting the assessment information using user id\n   * @param assessment_id - user assessment id\n   */\n  createassessment (CreateAssessment : CreateAssessmentInfo){\n    \n    return this.http.post(\"/api/users/\"+this.user_id+\"/assessments\" ,CreateAssessment )\n    .pipe(\n      catchError(this.handleError)\n    );\n  }  \n    private handleError(error: HttpErrorResponse) {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', error.error.message);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        console.error(\n          `Backend returned code ${error.status}, ` +\n          `body was: ${error.error}`);\n      }\n      // return an observable with a user-facing error message\n      return throwError(\n        error);\n    }\n}\n","module.exports = \"/*dimensions of create assesment panel*/\\n.dimension{\\n    height: 360px;\\n    width: 550px;\\n    margin-left: 400px;\\n    margin-right: 300px;\\n    margin-top: 80px;\\n}\\n/*text area of create assessment panel*/\\ntextarea {\\n    overflow: auto;\\n    margin: 0px; width: 516px; height: 102px;\\n}\\n/*create assessment panel details*/\\n.panelheader{\\n    padding: 5px 15px;\\n    background-color: #379df1;\\n   /* border-top: 0.1px solid #ddd;\\n    border-bottom-right-radius: 3px;\\n    border-bottom-left-radius: 3px;*/\\n}\\n.paneldesign {\\n    margin-bottom: 20px;\\n    background-color: #fff;\\n   /* border: 1px solid transparent;*/\\n   /* border-radius: 4px;\\n    box-shadow: 0 1px 1px rgba(0,0,0,.05);*/\\n}\\n.h6, h1, h2, h3, h4, h5, h6 {\\n    font-family: inherit;\\n    font-weight: 500;\\n    line-height: 1.1;\\n    color: white;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-flud\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\"\\n                aria-expanded=\\\"false\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n                <img src=\\\"assets/images/finalLogo.png\\\" style=\\\"width: 200px;\\\">\\n            </a>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li *ngIf=\\\"active_path == 'dashboard'\\\">\\n                    <a href=\\\"#s\\\" data-target=\\\"#login\\\" data-toggle=\\\"modal\\\">Create Assessment</a>\\n                </li>\\n                <li *ngIf=\\\"active_path != 'dashboard'\\\">\\n                        <a [routerLink]=\\\"['/dashboard']\\\">Back to home</a>\\n                    </li>\\n                <li>\\n                    <a (click)=\\\"logout()\\\">Logout</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\\n\\n\\n<div id=\\\"login\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\" #login>\\n\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #createAssessmentForm=\\\"ngForm\\\">\\n        <div class=\\\"paneldesign panel-default dimension  \\\">\\n            <div class=\\\"panelheader\\\">\\n                <button data-dismiss=\\\"modal\\\" class=\\\"close\\\">&times;</button>\\n                <h4>Create Assessment</h4>\\n            </div>\\n            <div class=\\\"panel-body \\\">\\n                    <div class=\\\"form-group\\\">\\n                            <label for=\\\"assessmentname\\\">Assessment Name:</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"assessmentname\\\" placeholder=\\\"Assessment name\\\"\\n                                   required\\n                                   [(ngModel)]=\\\"model.assessment_name\\\" name=\\\"assessmentname\\\"\\n                                   #name=\\\"ngModel\\\">\\n                            <div [hidden]=\\\"name.valid || name.pristine\\\"\\n                                 class=\\\"alert alert-danger\\\">\\n                              Assessment Name is required\\n                            </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                            <label for=\\\"description\\\"> <p style=\\\"text-align: left;\\\">Description:</p></label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\" Description\\\"\\n                                   required\\n                                   [(ngModel)]=\\\"model.assessment_description\\\" name=\\\"description\\\"\\n                                   #name=\\\"ngModel\\\">\\n                            </textarea>\\n    \\n                    </div>\\n            </div>\\n            <div class=\\\"panel-footer\\\">\\n                <div>\\n                    \\n                    <button  class=\\\"btn btn-success\\\" [disabled]=\\\"!createAssessmentForm.form.valid\\\" onclick=\\\"document.getElementById('login').style.display='none'; location.reload();\\\">Create Assessment</button>\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-warning\\\" value=\\\"reset\\\" ng-disabled=\\\"inputForm.$invalid\\\">Clear</button>\\n\\n                </div>\\n\\n            </div>\\n        </div>\\n    </form>\\n\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login/login.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { CreateassessmentService, CreateAssessmentInfo } from './createassessment.service';\nimport { ToastService } from '../toast.service';\n\n@Component({\n  selector: 'app-header1',\n  templateUrl: './header1.component.html',\n  styleUrls: ['./header1.component.css']\n})\nexport class Header1Component implements OnInit {\n\n  constructor(private login: LoginService , private create_service: CreateassessmentService, private router: Router, private cookies:CookieService, private toast:ToastService, private route:ActivatedRoute) { }\n  private logged_out:Boolean = true;\n\n  // Created model post data\n  model:CreateAssessmentInfo;\n\n   // Error message\n   error_message: String;\n\n  result : any;\n\n  // Activated path\n  active_path: string;\n\n  ngOnInit() {\n    this.model=new CreateAssessmentInfo();\n    /*setting up the assessment Id*/\n    this.model.assessment_id=0;\n\n    // Setting up the dynamic button\n    this.active_path = this.route.snapshot.url[0].path;\n  }\n  /**\n   * create function for create assessment \n   */\n  onSubmit(){\n\n      this.result = this.create_service.createassessment(this.model)\n      .subscribe(\n        // If any data paresent\n        data => {\n          this.toast.Success(\"Create Assessment\", \"User has created assessment successfully\");\n          \n        },\n        // If any error present\n        (error:HttpErrorResponse) => { \n          if (error == null)\n          this.toast.Success(\"Create Assessment\", \"Assessment Created successfully\");\n          else{\n            // Parsing the error codes and sending the appropriate responses\n            if(error.status == 404 || error.status == 504){\n              this.toast.Error(\"Server Issue\", \"Server is not responding!!!\");\n            }else if(error.status == 409){\n              this.toast.Error(\"Create Assessment\",\"Having truble while inserting data\");\n            }\n          }\n        }\n        \n      );\n  }\n  logout() {\n    this.login.logoutUser().subscribe(\n      data => {\n        this.toast.Success(\"Logout\",\"Successfully logged out.\");\n      },\n      (error: HttpErrorResponse) => {\n        this.logged_out = false;\n        if (error == null)\n          console.info(\"Data inserted successfully\");\n        else {\n          // Parsing the error codes and sending the appropriate responses\n          if (error.status == 404 || error.status == 504) {\n            console.error(\"Server is not responding!!!\");\n          } else if (error.status == 401 || error.status == 403) {\n            console.error(\"Login failed\");\n          }\n        }\n      }\n    );\n    if(this.logged_out) {\n        this.login.setUserLoggedIn(false);\n        this.cookies.deleteAll();\n        this.router.navigateByUrl('/login');\n      }\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardGuard implements CanActivate {\n  constructor( private login_service: LoginService, private router: Router){}\n  \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if( this.login_service.getUserLoggedIn()){\n      return this.login_service.getUserLoggedIn();\n    }else{\n      this.router.navigate(['login']);\n      return this.login_service.getUserLoggedIn();\n    }\n      \n  }\n}\n","module.exports = \".omb_authTitle {\\n    color: #fff;\\n    text-align: center;\\n    line-height: 300%;\\n    font-weight: 500;\\n    font-family: ubuntu;\\n    text-align: center;\\n    margin: unset;\\n}\\n\\n.omb_login .omb_socialButtons a {\\n    color: white;\\n    opacity: 0.9px;\\n}\\n\\n.omb_login .omb_socialButtons a:hover {\\n    color: white;\\n    opacity: 1;\\n}\\n\\n.omb_login .omb_socialButtons .omb_btn-facebook {\\n    background: #3b5998;\\n}\\n\\n.omb_login .omb_socialButtons .omb_btn-twitter {\\n    background: #00aced;\\n}\\n\\n.omb_login .omb_socialButtons .omb_btn-google {\\n    background: #c32f10;\\n}\\n\\n.omb_login .omb_loginOr {\\n    position: relative;\\n    font-size: 1.5em;\\n    color: #aaa;\\n    margin-top: 1em;\\n    margin-bottom: 1em;\\n    padding-top: 0.5em;\\n    padding-bottom: 0.5em;\\n}\\n\\n.omb_login .omb_loginOr .omb_hrOr {\\n    background-color: #cdcdcd;\\n    height: 1px;\\n    margin-top: 0px !important;\\n    margin-bottom: 0px !important;\\n}\\n\\n.omb_login .omb_loginOr .omb_spanOr {\\n    display: block;\\n    position: absolute;\\n    top: -0.6em;\\n    background-color: white;\\n    width: 3em;\\n    text-align: center;\\n}\\n\\n.omb_login .omb_loginForm .input-group.i {\\n    width: 1em;\\n}\\n\\n.omb_login .omb_loginForm .help-block {\\n    color: red;\\n}\\n\\n@media (min-width: 768px) {\\n    .omb_login .omb_forgotPwd {\\n        text-align: right;\\n        margin-top: 10px;\\n    }\\n}\\n\\n.container {\\n    display: flex;\\n    flex-direction: column;\\n    min-width: 300px;\\n}\\n\\n.container>.row {\\n    margin-top: 75px;\\n    margin-bottom: 75px;\\n}\\n\\n.label {\\n    color: white;\\n    font-family: ubuntu;\\n}\\n\\n.pass {\\n    margin-top: 1em;\\n}\\n\\n.input {\\n    border: 1px solid white;\\n    min-height: 1em;\\n    margin-top: 0.25em;\\n    padding: 0.5em 1em;\\n    background: dark;\\n    border-radius: 0.25em;\\n    color: black;\\n    font-family: ubuntu;\\n    font-size: 1em;\\n    transition: 200ms;\\n}\\n\\n.button {\\n    border: 0.1em solid white;\\n    background-color: #53bbd4;\\n    margin-right: 1em;\\n    height: 2.5em;\\n    color: white;\\n    font-family: ubuntu;\\n    min-width: 70px;\\n    padding: 0.5em 1em;\\n    -ms-grid-row-align: left;\\n        align-self: left;\\n    transition: 300ms;\\n    box-shadow: 2px 2px 2px black;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    cursor: pointer;\\n}\\n\\n.hover {\\n    border: 0.1em solid green_secondary;\\n    box-shadow: 3px 3px 3px black;\\n    color: green_secondary;\\n}\\n\\n.active {\\n    box-shadow: 0 0 0 black;\\n}\\n\\n.label {\\n    display: inline;\\n    /*padding: .2em .6em .3em;*/\\n    font-size: 14px;\\n    color: #fff;\\n    text-align: left;\\n    white-space: nowrap;\\n    vertical-align: baseline;\\n    border-radius: .25em;\\n}\\n\\nh2 {\\n    margin-top: 30px;\\n}\\n\\np {\\n    font-size: 18px;\\n}\\n\\n.login-banner {\\n    min-height: 400px;\\n}\\n\\n.login-form {\\n    height: 400px;\\n    padding-top: 0px;\\n    background-color:#003f62;\\n}\\n\\n.cd-user-modal-container {\\n    position: relative;\\n    width: 90%;\\n    max-width: 600px;\\n    background: #FFF;\\n    margin: 3em auto 4em;\\n    cursor: auto;\\n}\\n\\n#boxshadow {\\n    position: relative;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, .5);\\n    padding: 10px;\\n}\\n\\n.main {\\n    display: flex;\\n    /*padding: 10em;*/\\n    padding-top: 2px;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.container[_ngcontent-c3] {\\n    display: flex;\\n    flex-direction: column;\\n    min-width: 365px;\\n}\\n\\np {\\n    font-family: ubuntu;\\n}\\n\\n.active[_ngcontent-c1] {\\n    display: none;\\n}\\n\\n.navbar-right {\\n    display: none;\\n}\\n\\n.h3 {\\n    float: left;\\n}\\n\\n.label {\\n    display: inline;\\n    padding: .2em .6em .3em;\\n    font-size: 100%;\\n    font-weight: 400;\\n    line-height: 1;\\n    color: #fff;\\n    text-align: left;\\n    white-space: nowrap;\\n    vertical-align: baseline;\\n    border-radius: .25em;\\n}\\n\\n.label {\\n    padding-left: 0px;\\n}\\n\\n.p {\\n    color: white !importent;\\n}\\n\\n.text-danger{\\n   color: #f99090;\\n}\"","module.exports = \"<app-header>\\n\\n</app-header>\\n\\n<div class=\\\"container\\\">\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-7 login-banner\\\" style=\\\"background: url(assets/images/bg7.jpg)\\\">\\n        <h2 style=\\\"font-family: ubuntu;color: white;\\\"><b>DevOps Self-Assessment</b></h2>\\n        <p style=\\\"margin: 30px 0px;font-family: ubuntu;color: white;text-align: justify;\\\"> \\n            DevOps assessment tool that will help you understand current \\n            capabilities across the entire release lifecycle and quickly \\n            identify opportunities for improvement. The analysis will \\n            ensure you are able to benchmark where you stand compared to \\n            others in the industry and ultimately enable you \\n            to establish DevOps transformation strategy. </p>\\n    </div>\\n\\n    <div class=\\\" col-md-5\\\">\\n       \\n        <div id=\\\"boxshadow\\\" class=\\\"login-form\\\">\\n          \\n                <h3 class=\\\"omb_authTitle\\\" >Login</h3>\\n                \\n                    <form class=\\\"main\\\" (ngSubmit)=\\\"onSubmit()\\\" #LoginForm=\\\"ngForm\\\">\\n                        <div id=\\\"container\\\" class=\\\"container\\\">\\n                            \\n                            <div class=\\\"label \\\">Email id</div>\\n                            <input id=\\\"user\\\" class=\\\"input\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" required [(ngModel)]=\\\"model.user_email\\\" name=\\\"email\\\" #name=\\\"ngModel\\\"\\n                            #email=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"/>\\n                            <div *ngIf=\\\"email.touched\\\" class=\\\"text-danger\\\">\\n                                <div *ngIf=\\\"email.errors?.required\\\">\\n                                  Email address is required\\n                                </div>\\n                                <div *ngIf=\\\"email.errors?.pattern\\\">\\n                                    Email address is invalid\\n                                </div>\\n                            </div>\\n                            <br/>\\n                            <div class=\\\"label\\\" style=\\\"margin-top: 8px;\\\">Password</div>\\n                            <input class=\\\"input\\\" type=\\\"password\\\" required [(ngModel)]=\\\"model.user_password\\\" name=\\\"password\\\" #name=\\\"ngModel\\\" #password=\\\"ngModel\\\"/>\\n                            <div *ngIf=\\\"password.touched\\\" class=\\\"text-danger\\\">\\n                                <div *ngIf=\\\"password.errors?.required\\\">\\n                                  Password is required\\n                                </div>\\n                                \\n                              </div>\\n                            <!-- <div class=\\\"checkbox\\\" style=\\\" text-align: left; color: white\\\">\\n                                <label><input type=\\\"checkbox\\\"> Remember me</label>\\n                            </div> -->\\n                            <div style=\\\"padding-top: 20px \\\">\\n                                <button type=\\\"submit\\\" href=\\\"\\\" class=\\\"btn btn-primary\\\" >Login</button>\\n                                <button type=\\\"reset\\\" class=\\\"btn btn-primary\\\">Clear</button>\\n                            </div>\\n                            <br/>\\n                            <p style=\\\"color:white;\\\">forgot your password? <a href=\\\"#\\\" data-target=\\\"#pwdModal\\\" data-toggle=\\\"modal\\\">click here</a></p>\\n                        </div>\\n                    </form>\\n               \\n            \\n                  \\n                      \\n                      <!--modal-->\\n                      <div id=\\\"pwdModal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n                        <div class=\\\"modal-dialog\\\">\\n                        <div class=\\\"modal-content\\\">\\n                            <div class=\\\"modal-header\\\">\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\n                                <h1 class=\\\"text-center\\\">What's My Password?</h1>\\n                            </div>\\n                            <div class=\\\"modal-body\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                      <div class=\\\"panel panel-default\\\">\\n                                          <div class=\\\"panel-body\\\">\\n                                              <div class=\\\"text-center\\\">\\n                                                \\n                                                <p>If you have forgotten your password you can reset it here.</p>\\n                                                  <div class=\\\"panel-body\\\">\\n                                                      <fieldset>\\n                                                          <div class=\\\"form-group\\\">\\n                                                              <input class=\\\"form-control input-lg\\\" placeholder=\\\"E-mail Address\\\" name=\\\"email\\\" type=\\\"email\\\" [(ngModel)]=\\\"user_email\\\" >\\n                                                          </div>\\n                                                          <button  type=\\\"button\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" value=\\\"Send My Password\\\" (click)=\\\"sendResetLink()\\\" data-dismiss=\\\"modal\\\"> Send password reset link </button>\\n                                                      </fieldset>\\n                                                  </div>\\n                                              </div>\\n                                          </div>\\n                                      </div>\\n                                  </div>\\n                            </div>\\n                            <div class=\\\"modal-footer\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                <button class=\\\"btn\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">Cancel</button>\\n                                </div>\\t\\n                            </div>\\n                        </div>\\n                        </div>\\n                      </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from './user';\nimport { Router } from '@angular/router';\nimport { LoginService } from './login.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ToastService } from '../toast.service';\nimport { PasswordService } from '../forgetpassword/password.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  login = {\n\n    buttontext: 'Register',\n    buttonlink: '/register'\n  };\n\n  // Error messages\n  private error_message: String;\n\n  // Initilizing the form data\n  model = new User();\n\n  // User email address field for sending.\n  public user_email: string;\n\n  constructor(private router: Router, private password_service: PasswordService,\n    private login_service: LoginService, private toast: ToastService) { }\n\n  ngOnInit() {\n    // If user alresdy logged in then redirect to dashboard page\n    if (this.login_service.getUserLoggedIn()) {\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  onSubmit() {\n    console.log('Credentails:', this.model);\n    this.login_service.loginUser(this.model).subscribe( // If any data paresent\n      data => {\n        this.toast.Success('Login', 'User has been logged in Successfully');\n        this.login_service.setUserLoggedIn(true);\n        this.login_service.setLoggedUser(data.user_id);\n        this.router.navigate(['dashboard']);\n      },\n      // If any error present\n      (error: HttpErrorResponse) => {\n        if (error == null) { }\n        else {\n          // Parsing the error codes and sending the appropriate responses\n          if (error.status == 404 || error.status == 504) {\n            this.toast.Error('Server Issue', 'Server is not responding!!!');\n          } else if (error.status == 401 || error.status == 403) {\n            this.toast.Error('Login Failed', 'Please Enter Valid Email Id/Password');\n          }\n        }\n      });\n    // if(this.model.user_email == 'admin' && this.model.user_password == 'admin'){\n    //   this.login_service.setUserLoggedIn();\n    //   this.router.navigate(['dashboard']);\n    // }\n  }\n\n  sendResetLink() {\n    // Code for sending the password reset link\n    this.password_service.sendPasswordLink(this.user_email).subscribe(\n      data => {\n        this.router.navigateByUrl('/forgetpasswordsuccess');\n      },\n      // If any error present\n      (error: HttpErrorResponse) => {\n        if (error == null) {\n        } else {\n          // Parsing the error codes and sending the appropriate responses\n          if (error.status === 404 ) {\n            this.toast.Error('Invalid Email', 'Specified email is not been registered '\n            + 'with any user accout please re-enter your correct email address.');\n          } else if (error.status === 504) {\n            this.toast.Error('Server Issue', 'Server is not responding!!!');\n          } else if (error.status === 401 || error.status === 403) {\n            this.toast.Error('Login Failed', 'No user registered with this' + this.user_email + ' address');\n          }\n        }\n      });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from './user';\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserInfo } from '../dashboard/dashboard.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private isUserLoggedIn: boolean;\n  private logged_user: number = 0;\n  private auth_token: string = '';\n  private cookie_expiry_date: Date = new Date();\n\n  constructor(private http: HttpClient, private cookie: CookieService) {\n    this.isUserLoggedIn = false;\n\n    // Added the expiry time for the cookies\n    this.cookie_expiry_date.setDate(this.cookie_expiry_date.getDate() + 1);\n  }\n\n  public getUserLoggedIn(): boolean {\n    // return this.isUserLoggedIn;\n    if (this.cookie.check('isUserLoggedIn')) {\n      if (this.cookie.get('isUserLoggedIn') == 'true') {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  public setUserLoggedIn(response) {\n    if (response) {\n      this.cookie.set('isUserLoggedIn', 'true', this.cookie_expiry_date);\n    } else {\n      this.cookie.set('isUserLoggedIn', 'false', this.cookie_expiry_date);\n    }\n    //this.isUserLoggedIn = response;\n  }\n\n  public setLoggedUser(user_id: number) {\n    this.cookie.set('logged_user', user_id.toString(), this.cookie_expiry_date);\n  }\n\n  public getLoggedUser() {\n    if (this.cookie.check('logged_user')) {\n      return Number.parseInt(this.cookie.get('logged_user'));\n    } else {\n      return this.logged_user;\n    }\n  }\n\n  public getAuthToken() {\n    if (this.cookie.check('auth_token')) {\n      return this.cookie.get('auth_token');\n    } else {\n      return this.auth_token;\n    }\n    //return this.auth_token;\n  }\n\n  public setAuthToken(auth_token) {\n    this.cookie.set('auth_token', auth_token, this.cookie_expiry_date);\n    //this.auth_token = auth_token;\n  }\n\n  public loginUser(user: User) {\n    // Setting the cookies value.\n    this.auth_token = 'Basic ' + btoa(user.user_email + ':' + user.user_password);\n    this.setAuthToken(this.auth_token);\n\n\n    // this.http.get('/api/users/login/'+user.user_email, {headers: headers})\n    return this.http.get<UserInfo>('/api/users/login/' + user.user_email)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  public logoutUser() {\n\n    // this.http.get('/api/users/login/'+user.user_email, {headers: headers})\n    return this.http.get('/api/logout')\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      error);\n  }\n}\n","export class User {\n    user_email: string;\n    user_password: string;\n}\n","module.exports = \"/* Full-width input fields */\\ninput[type=text], input[type=password] {\\n    width: 100%;\\n    padding: 12px 20px;\\n    margin: 8px 0;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n}\\n/* Set a style for all buttons */\\nbutton {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n    width: 100%;\\n}\\n/* Extra styles for the cancel button */\\n.cancelbtn {\\n    width: auto;\\n    padding: 10px 18px;\\n    background-color: #f44336;\\n}\\n/* Center the image and position the close button */\\n.container {\\n    padding: 16px;\\n}\\n/* The Modal (background) */\\n.modal {\\n    display: none; /* Hidden by default */\\n    position: fixed; /* Stay in place */\\n    z-index: 1; /* Sit on top */\\n    left: 0;\\n    top: 0;\\n    width: 70%; /* Full width */\\n    height: 100%; /* Full height */\\n    overflow: auto; /* Enable scroll if needed */\\n    background-color: rgb(0,0,0); /* Fallback color */\\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\\n    padding-top: 60px;\\n}\\n/* Modal Content/Box */\\n.modal-content {\\n    background-color: #fefefe;\\n    margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\\n    border: 1px solid #888;\\n    width: 80%; /* Could be more or less, depending on screen size */\\n}\\n/* The Close Button (x) */\\n.close {\\n    position: absolute;\\n    right: 25px;\\n    top: 0;\\n    color: #000;\\n    font-size: 35px;\\n    font-weight: bold;\\n}\\n.cancelbtn {\\n       width: 100%;\\n    }\\n\"","module.exports = \"\\n<div id=\\\"id01\\\" class=\\\"modal\\\">\\n  \\n  <form class=\\\"modal-content animate\\\" action=\\\"/action_page.php\\\">\\n    <div class=\\\"imgcontainer\\\">\\n      <span onclick=\\\"document.getElementById('id01').style.display='none'\\\" class=\\\"close\\\" title=\\\"Close Modal\\\">&times;</span>\\n      \\n    </div>\\n\\n    <div class=\\\"container\\\">\\n        <label for=\\\"uname\\\">Assessment Name:</label>\\n        <input type=\\\"text\\\" placeholder=\\\"Enter Username\\\" name=\\\"uname\\\" required>\\n  \\n        <label for=\\\"psw\\\">Description:</label><br/>\\n       <textarea rows=\\\"8\\\" cols=\\\"45\\\" name=\\\"comment\\\" form=\\\"usrform\\\">\\n  Enter text here...</textarea>\\n          \\n        <button type=\\\"submit\\\" onclick=\\\"close\\\">Create</button>\\n        <label>\\n           \\n        </label>\\n      </div>\\n\\n    <script>\\n      // Get the modal\\n      var modal = document.getElementById('id01');\\n      \\n      // When the user clicks anywhere outside of the modal, close it\\n      window.onclick = function(event) {\\n          if (event.target == modal) {\\n              modal.style.display = \\\"none\\\";\\n          }\\n        }\\n\\n      </script>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-popup',\n  templateUrl: './popup.component.html',\n  styleUrls: ['./popup.component.css']\n})\nexport class PopupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".category-title{\\n    padding: 1em 2em;\\n    \\n}\\n.category-title > h4 {\\n    font-size: 2em;\\n}\\n.nav > .nav-pills > li > a{\\n    cursor: pointer;\\n}\\n.container {\\n    font-family: \\\"ubuntu\\\";\\n    font-size: 15px;\\n    line-height: 1.42857143;\\n    color: #333;\\n\\tbackground-color: #fff;\\n\\theight: auto;\\n}\\n/* Button style */\\na {\\n    text-decoration: none;\\n    display: inline-block;\\n    padding: 8px 16px;\\n}\\n.previous {\\n    background-color: #f1f1f1;\\n    color: black;\\n    cursor: pointer;\\n}\\n.next {\\n    background-color: #4CAF50;\\n    color: white;\\n    cursor: pointer;\\n}\\n/*label*/\\n.b {\\n    word-wrap: break-word;\\n}\\nlabel{\\n  font-weight: unset !important;\\n}\\n\"","module.exports = \"<app-header1></app-header1>\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"category-title\\\" *ngIf=\\\"selected_category\\\">\\n    <h4> Section: {{ selected_category.category_name }}</h4>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <div class=\\\"category-bar\\\">\\n      <ul class=\\\"nav nav-pills nav-stacked\\\">\\n        <li role=\\\"presentation\\\" class=\\\"\\\" *ngFor=\\\"let cat of category\\\" [class.active]=\\\"cat === selected_category\\\">\\n          <a (click)=\\\"onCategoryChange(cat)\\\">{{ cat.category_name }}</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"tab-content col-md-9\\\">\\n\\n    <div class=\\\"panel panel-default\\\" *ngFor=\\\"let question of questions\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h4>{{ question.question_id }}. {{ question.question }}</h4>\\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n        <table *ngFor=\\\"let option of question.questionOptions\\\">\\n          <div *ngIf=\\\"question.question_type == 'single choice question'\\\" style=\\\"margin-bottom:1em\\\">\\n            <tr>\\n              <td>\\n                <input type=\\\"radio\\\" id=\\\"{{ option.question_option_id }}\\\" (click)=\\\"optionSelected(question, option)\\\"\\n                  name=\\\"{{ question.question_id }}\\\" value=\\\"{{ option.question_option_id }}\\\" [checked]=option.is_selected>\\n              </td>\\n              <td><label class=\\\"b\\\" for=\\\"{{ option.question_option_id }}\\\">&nbsp;&nbsp;{{ option.question_option }}</label>\\n              </td>\\n            </tr>\\n          </div>\\n          <div *ngIf=\\\"question.question_type != 'single choice question'\\\" style=\\\"margin-bottom:1em\\\">\\n\\n            <tr>\\n              <td><input type=\\\"checkbox\\\" id=\\\"{{ option.question_option_id }}\\\" (click)=\\\"optionSelected(question, option)\\\"\\n                  name=\\\"{{ question.question_id }}\\\" value=\\\"{{ option.question_option_id }}\\\" [checked]=\\\"option.is_selected\\\"></td>\\n                &nbsp; &nbsp;\\n                  <td><label for=\\\"{{ option.question_option_id }}\\\">{{ option.question_option }}</label></td>\\n            </tr>\\n\\n          </div>\\n        </table>\\n      </div>\\n\\n    </div>\\n    <div>\\n      <a class=\\\"previous\\\" *ngIf=\\\"isPreviousVisible\\\" (click)=\\\"previousCategory()\\\">&laquo; Previous</a>\\n      <a class=\\\"next\\\" (click)=\\\"nextCategory()\\\"> {{ next }} &raquo;</a>\\n    </div>\\n  </div>\\n</div>\\n<br />\\n\"","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { CategoryInfo, QuestionpageService, QuestionInfo, questionOptionsInfo } from './questionpage.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastService } from '../toast.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-questionpage',\n  templateUrl: './questionpage.component.html',\n  styleUrls: ['./questionpage.component.css']\n})\nexport class QuestionpageComponent implements OnInit {\n\n  // Variables for the hold category data\n  category: CategoryInfo[];\n\n  // Varible to hold the quesion data\n  questions: QuestionInfo[];\n\n  // Assessment id\n  assessment_id: number;\n\n  // Category id\n  category_id: number;\n\n  // Selected Category\n  selected_category: CategoryInfo;\n\n  // Next button\n  next: String = 'Next';\n\n  headers: any;\n\n  config: any;\n\n  // Hiding previous button in 1st page\n  isPreviousVisible: Boolean = true;\n\n  constructor(private cat_service: QuestionpageService, private router: ActivatedRoute,\n    private toast: ToastService, private route: Router) {\n    // Get the data form the path variable.\n    this.assessment_id = parseInt(this.router.snapshot.paramMap.get('assessment_id'));\n    this.category_id = parseInt(this.router.snapshot.paramMap.get('category_id'));\n  }\n\n  ngOnInit() {\n\n    // Code for pulling the category form API\n    this.cat_service.getCategory().subscribe(\n      data => {\n        this.category = data;\n        this.selected_category = this.category[0];\n      },\n      // If any error present\n      (error: HttpErrorResponse) => {\n        if (error == null) {\n        } else {\n          // Parsing the error codes and sending the appropriate responses\n          if (error.status === 404 || error.status === 504) {\n            this.toast.Error('Server Issue', 'Server is not responding!!!');\n          } else if (error.status === 401 || error.status === 403) {\n            this.toast.Error('Login Failed', 'Please Enter Valid Email Id/Password');\n          }\n        }\n      });\n\n    // Calling of the question API\n    this.getQuestions();\n  }\n\n\n  /**\n   * This method is created to get the questions\n   */\n  getQuestions() {\n    // Code for pulling the questions form Questions API\n    this.cat_service.getQuestions(this.assessment_id, this.category_id).subscribe(\n      data => {\n        this.questions = data;\n        console.log('Questions', data);\n\n      },\n      // If any error present\n      (error: HttpErrorResponse) => {\n        if (error === null) {\n        } else {\n          // Parsing the error codes and sending the appropriate responses\n          if (error.status === 404 || error.status === 504) {\n            this.toast.Error('Server Issue', 'Server is not responding!!!');\n          } else if (error.status === 401 || error.status === 403) {\n            this.toast.Error('Login Failed', 'Please Enter Valid Email Id/Password');\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * This method is created to get the questions\n   */\n  saveQuestions() {\n    // Code for pulling the questions form Questions API\n    this.cat_service.saveQuestionAnswer(this.assessment_id, this.category_id, this.questions).subscribe(\n      data => {\n         // checking wheather the last category is answered\n        if (this.category.length === this.category_id) {\n          // Submitting the assessment\n          this.submitAssessment();\n\n        } else {\n          // calling the next category question\n          const cat: CategoryInfo = this.getCategoryById(this.category_id + 1);\n          console.log('Category Info', cat);\n\n          // Redirecting to next category\n          this.onCategoryChange(cat);\n        }\n      },\n      // If any error present\n      (error: HttpErrorResponse) => {\n        if (error == null) {\n        } else {\n          // Parsing the error codes and sending the appropriate responses\n          if (error.status === 404 || error.status === 504) {\n            this.toast.Error('Server Issue', 'Server is not responding!!!');\n          } else if (error.status === 401 || error.status === 403) {\n            this.toast.Error('Login Failed', 'Please Enter Valid Email Id/Password');\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * This method is created to get the questions\n   */\n  submitAssessment() {\n    // Code for pulling the questions form Questions API\n    this.cat_service.submitAssessment(this.assessment_id).subscribe(\n      resp => {\n        console.log('status code', resp.status);\n        if (resp.status === 200) {\n          this.toast.Success('Submit assessment', 'All questions has been answered successfully...');\n          // Redirecting to the result page\n          this.route.navigate(['/assessment', this.assessment_id, 'result']);\n        } else {\n          this.toast.Error('Submit assessment', 'Still some questions are need to answer!!!');\n        }\n      },\n      // If any error present\n      (error: HttpErrorResponse) => {\n        if (error == null) {\n        } else {\n          // Parsing the error codes and sending the appropriate responses\n          if (error.status === 404 || error.status === 504) {\n            this.toast.Error('Server Issue', 'Server is not responding!!!');\n          } else if (error.status === 401 || error.status === 403) {\n            this.toast.Error('Login Failed', 'Please Enter Valid Email Id/Password');\n          }\n        }\n      }\n    );\n  }\n\n  // On onCategoryChange()\n  onCategoryChange(category: CategoryInfo) {\n    // Navigating to new page\n    this.route.navigate(['/assessment', this.assessment_id, 'category', category.category_id]).then(onfulfilled => {\n      // Update category id\n      this.category_id = parseInt(this.router.snapshot.paramMap.get('category_id'));\n\n      // Calling of the question API\n      this.getQuestions();\n\n      // Setting up the category name\n      this.selected_category = category;\n\n      // Changing the next button text\n      if (this.category.length === this.category_id) {\n        // Submitting the assessment\n        this.next = 'Submit';\n\n      } else {\n        // Submitting the assessment\n        this.next = 'Next';\n      }\n\n      // Changing the next button text\n      if (this.category_id <= 1 ) {\n         // Hide previous button.\n        this.isPreviousVisible = false;\n\n      } else {\n         // Hide previous button.\n        this.isPreviousVisible = true;\n      }\n    });\n  }\n\n  // Next button click\n  nextCategory() {\n    console.log('Answered question', this.questions);\n\n    console.error('Answered questions', this.questions);\n    // calling the question save API\n    this.saveQuestions();\n\n  }\n\n  // Previous button click\n  previousCategory() {\n    console.log('Answered question', this.questions);\n\n    console.error('Answered questions', this.questions);\n    // calling the question save API\n    this.saveQuestions();\n\n    if (this.category_id <= 1) {\n      // calling the next category question\n      const cat: CategoryInfo = this.getCategoryById(this.category_id);\n      console.log('Category Info', cat);\n\n      // Redirecting to next category\n      this.onCategoryChange(cat);\n    } else {\n      // calling the next category question\n      const cat: CategoryInfo = this.getCategoryById(this.category_id - 1);\n      console.log('Category Info', cat);\n\n      // Redirecting to next category\n      this.onCategoryChange(cat);\n    }\n  }\n\n  // Option select click\n  optionSelected(quesion: QuestionInfo, option: questionOptionsInfo) {\n    this.questions.forEach(que => {\n      if (que.question_id === quesion.question_id) {\n        // if question is multiple choice\n        if (que.question_type !== 'single choice question') {\n          que.questionOptions.forEach(op => {\n            if (op.question_option_id === option.question_option_id) {\n              if (op.is_selected === true) {\n                op.is_selected = false;\n              } else {\n                op.is_selected = true;\n              }\n            }\n          });\n        } else {\n          que.questionOptions.forEach(op => {\n            if (op.question_option_id === option.question_option_id) {\n              if (op.is_selected === true) {\n                op.is_selected = false;\n              } else {\n                op.is_selected = true;\n              }\n            } else {\n              if (op.is_selected === true) {\n                op.is_selected = false;\n              }\n            }\n          });\n        }\n      }\n    });\n  }\n\n  private getCategoryById(cat_id: number): CategoryInfo {\n    let selected_cat: CategoryInfo;\n\n\n    this.category.forEach(cat => {\n      if (cat.category_id === cat_id) {\n        selected_cat = cat;\n      }\n    });\n    return selected_cat;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { throwError, Observable, config } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LoginService } from '../login/login.service';\nimport { Config } from 'protractor';\n\n\nexport interface CategoryInfo {\n\n  category_id: number;\n  category_name: string;\n}\n\nexport interface QuestionInfo {\n  question_id: number;\n  category_name: string;\n  question: string;\n  question_type: string;\n  questionOptions: questionOptionsInfo[];\n}\n\nexport interface questionOptionsInfo {\n  is_selected: boolean;\n  question_option: string;\n  question_option_id: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionpageService {\n  // Logged user\n  user_id: number;\n  constructor(private http: HttpClient, private login: LoginService) {\n    this.user_id = this.login.getLoggedUser();\n  }\n\n  /**\n  * This method is used to get all category types form the API\n  */\n  getCategory() {\n    return this.http.get<CategoryInfo[]>('/api/categories')\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * This method is used to get all Questions and Options form the API\n   */\n  getQuestions(assessment_id: number, category_id: number) {\n    return this.http.get<QuestionInfo[]>('/api/users/' + this.user_id + '/assessments/' + assessment_id + '/categories/' + category_id + '/questions')\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * This method is created for calling the save API\n   * @param assessment_id - Assessment id\n   * @param category_id : category id\n   * @param question : array of questions\n   */\n  saveQuestionAnswer(assessment_id: number, category_id: number, question: QuestionInfo[]){\n    return this.http.put<QuestionInfo[]>('/api/users/' + this.user_id + '/assessments/' + assessment_id + '/categories/' + category_id + '/questions', question)\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * This method is created for submit the assessment\n   * @param assessment_id : Assessment id for submit the API\n   */\n  submitAssessment(assessment_id: number): Observable<HttpResponse<Config>>{\n    return this.http.get<Config>('/api/users/' + this.user_id + '/assessments/' + assessment_id + '/submit', { observe: 'response' })\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      error);\n  }\n}\n","export class RegisterUser {\n        public first_name: string;\n        public last_name: string;\n        public user_email: string;\n        public company_size_id: number;\n        public country_id: number;\n        public industry_type_id: number;\n        public companyName: string;\n        public user_password: string;\n        public agree: boolean;\n}\n","module.exports = \"/* Sidebar for information */\\n\\np {\\n    font-family: ubuntu;\\n    text-align: justify;\\n}\\n\\nimg {\\n    height: 400px;\\n    width: 700px;\\n}\\n\\n/* User registration form */\\n\\n/* Form title */\\n\\n.registration-box {\\n    /* background-color:#696b71; */\\n    padding: 10px;\\n    color: black;\\n}\\n\\n.registration-box .form_title {\\n    /* color: white; */\\n    \\n    text-align: center;\\n    line-height: 300%;\\n    margin-top: 2px;\\n    font-family: ubuntu;\\n}\\n\\n#boxshadow {\\n    position: relative;\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, .5);\\n}\\n\\n/* Form input boxes */\\n\\ninput > label {\\n    font-weight: 300;\\n}\\n\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"row\\\" style=\\\"margin: 30px;\\\">\\n\\n  <div class=\\\"col-md-7 \\\">\\n    <div>\\n      <p style=\\\"font-size: 24px;\\\"><b>DevOps</b></p>\\n    </div>\\n    <p >DevOps is a product building society and practice that goes for bringing together programming improvement and programming operation.DevOps is the blend of social theories, practices, and instruments that expansion an association's capacity to convey applications and administrations at high speed: advancing and enhancing items at a quicker pace than associations utilizing conventional programming advancement and framework the executives forms.</p>\\n    <br/>\\n    <img class=\\\"img img-responsive\\\" src=\\\"assets/images/devops-banner.png\\\">\\n    \\n  </div>\\n\\n  <div class=\\\" col-md-5\\\">\\n    <div id=\\\"boxshadow\\\">\\n      <div class=\\\"registration-box \\\">\\n        <h3 class=\\\"form_title\\\">REGISTRATION</h3>\\n        {{error_message}}\\n            <form (ngSubmit)=\\\"onSubmit()\\\" #UserRegistrationForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-3\\\" for=\\\"first_name\\\">First Name:</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"first_name\\\" class=\\\"form-control\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" required [(ngModel)]=\\\"model.first_name\\\" name=\\\"first_name\\\"\\n                    #first_name=\\\"ngModel\\\" />\\n                  <div *ngIf=\\\"first_name.touched\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"first_name.errors?.required\\\">\\n                      First name is required\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-3 \\\" for=\\\"last_name\\\">Last Name:</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"last_name\\\" class=\\\"form-control\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" required [(ngModel)]=\\\"model.last_name\\\" name=\\\"last_name\\\"\\n                    #last_name=\\\"ngModel\\\" />\\n                  <div *ngIf=\\\"last_name.touched\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"last_name.errors?.required\\\">\\n                      Last name is required\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-3\\\" for=\\\"email\\\">Email id:</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"email\\\" class=\\\"form-control\\\" type=\\\"email\\\" autocomplete=\\\"off\\\" required [(ngModel)]=\\\"model.user_email\\\" name=\\\"email\\\"\\n                    #email=\\\"ngModel\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" />\\n                  <div *ngIf=\\\"email.touched\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"email.errors?.required\\\">\\n                      Email address is required\\n                    </div>\\n                    <div *ngIf=\\\"email.errors?.pattern\\\">\\n                      Email address is invalid\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-3\\\" for=\\\"password\\\">Password:</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" required [(ngModel)]=\\\"model.user_password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\"\\n                    pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\\\" />\\n                  <div *ngIf=\\\"password.touched\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"password.errors?.required\\\">\\n                      Password is required\\n                    </div>\\n                    <div *ngIf=\\\"password.errors?.pattern\\\">\\n                      Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-3 \\\" for=\\\"company_name\\\">Company Name:</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input id=\\\"company_name\\\" class=\\\"form-control\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" required [(ngModel)]=\\\"model.companyName\\\" name=\\\"company_name\\\"\\n                    #company_name=\\\"ngModel\\\" />\\n                  <div *ngIf=\\\"company_name.touched\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"company_name.errors?.required\\\">\\n                      Company name is required\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-3 \\\" for=\\\"company_size\\\">Company Size:</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <select id=\\\"company_size\\\" class=\\\"form-control\\\" style=\\\"height: 34PX;\\\" required [(ngModel)]=\\\"model.company_size_id\\\" name=\\\"company_size\\\"\\n                    #company_size=\\\"ngModel\\\">\\n                    <option></option>\\n                    <option *ngFor=\\\"let company_size of company_sizes\\\" [value]=\\\"company_size.company_size_id\\\">{{company_size.size}}</option>\\n                  </select>\\n                  <div *ngIf=\\\"company_size.touched\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"company_size.errors?.required\\\">\\n                      Please select the company size...\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-3 \\\" for=\\\"industry_type\\\">Industry:</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <select id=\\\"industry_type\\\" class=\\\"form-control\\\" style=\\\"height: 34PX;\\\" required [(ngModel)]=\\\"model.industry_type_id\\\" name=\\\"industry_type\\\"\\n                    #industry_type=\\\"ngModel\\\">\\n                    <option></option>\\n                    <option *ngFor=\\\"let industry of industry_types\\\" [value]=\\\"industry.industry_type_id\\\">{{industry.industry_name}}</option>\\n                  </select>\\n                  <div *ngIf=\\\"industry_type.touched\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"industry_type.errors?.required\\\">\\n                      Please select the industry type...\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-3 \\\" for=\\\"country_name\\\">Countries:</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <select name=\\\"country_name\\\" class=\\\"form-control\\\" style=\\\"height: 34PX;\\\" required [(ngModel)]=\\\"model.country_id\\\" name=\\\"country_name\\\"\\n                    #country_name=\\\"ngModel\\\">\\n                    <option></option>\\n                    <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.country_id\\\">{{country.country_name}}</option>\\n                  </select>\\n                  <div *ngIf=\\\"country_name.touched\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"country_name.errors?.required\\\">\\n                      Please select the country...\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-xs-4 col-sm-3 col-md-3\\\">\\n                  <span class=\\\"button-checkbox\\\">\\n                    <input name=\\\"selectTC\\\" type=\\\"checkbox\\\" name=\\\"t_and_c\\\" id=\\\"t_and_c\\\" value=\\\"I Agree\\\" value=\\\"1\\\" required  [(ngModel)]=\\\"model.agree\\\" > <label for=\\\"t_and_c\\\"> I\\n                      Agree </label>\\n                  </span>\\n                </div>\\n                <div class=\\\"col-xs-8 col-sm-9 col-md-9\\\">\\n                  By clicking <strong class=\\\"label label-primary\\\">Register</strong>, you agree to the <a [routerLink]=\\\"['/terms']\\\" target=\\\"_blank\\\">Terms and Conditions</a> set out by this site, including our Cookie Use.\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <button class=\\\"btn btn-primary col-md-5\\\" [disabled]=\\\"!UserRegistrationForm.form.valid\\\" style=\\\"margin: 1.2em\\\" > Register </button>\\n                  <button id=\\\"clear\\\" type=\\\"reset\\\" class=\\\"btn btn-warning col-md-5\\\" style=\\\"margin: 1.2em\\\"> Clear </button>\\n                </div>\\n              </div>\\n            </form>\\n          \\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CompanySize, IndustryTpes, Contries, RegistrationService } from './registration.service';\nimport { RegisterUser } from './register-user';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { ToastService } from '../toast.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  \n  // Variables for the hold API data\n  countries: Contries[];\n  company_sizes: CompanySize[];\n  industry_types: IndustryTpes[];\n\n  // Creating model\n  model:RegisterUser;\n\n  // Error message\n  error_message: String;\n\n  result:any;\n\n  constructor(private router: Router,private reg_service: RegistrationService, private toast:ToastService) { }\n\n  ngOnInit() {\n    // Code for pulling the contries form registration service\n    this.reg_service.getContries().subscribe(data =>{\n      this.countries = data;\n    });\n\n    // Code for pulling the company size form registration service\n    this.reg_service.getCompanySizes().subscribe(data =>{\n      this.company_sizes = data;\n    });\n\n    // Code for pulling the industry types form registration service\n    this.reg_service.getIndustryType().subscribe(data =>{\n      this.industry_types = data;\n    });\n  \n    // initilizastion of model\n    this.model = new RegisterUser();\n  }\n  \n  /**\n   * Submit function for the registration page\n   */\n  onSubmit(){\n\n    // Calling the register user API\n    this.result = this.reg_service.registerUser(this.model)\n      .subscribe(\n        // If any data paresent\n        data => {\n          this.toast.Success( \"Register\", \"User has been registered successfully\");\n          this.model = new RegisterUser();\n          this.router.navigate(['login']);\n\n        },\n        // If any error present\n        (error:HttpErrorResponse) => { \n          if (error == null)\n          this.toast.Success(\"Register\",\"User Registered successfully\");\n          else{\n            // Parsing the error codes and sending the appropriate responses\n            if(error.status == 404 || error.status == 504){\n              this.toast.Error(\"Servere Issue\", \"Server is not responding!!!\");\n            }else if(error.status == 409){\n              this.toast.Error(\"Registration\", \"Having truble while inserting data\");\n            }\n          }\n        }\n        \n      );\n    \n    \n\n  }3\n}","/**\n * Title : registration service\n * Description: This service created for perform an registration operation\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpErrorHandlerService, HandleError } from '../http-error-handler.service';\nimport { RegisterUser } from './register-user';\nimport { Resolve } from '@angular/router';\nimport { ResolvedUser } from './resolved-user';\nimport { HttpResponse } from 'selenium-webdriver/http';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n  })\n};\n\n// Interface to hold the number of contries\nexport interface Contries { \n  country_id: number; \n  country_name: string \n}\n\n// Interface for hold the all industry sizes\nexport interface IndustryTpes{\n  industry_type_id: number;\n  industry_name: string;\n}\n\n// Interface for hold the company sizes\nexport interface CompanySize {\n  company_size_id: number;\n  size: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService{\n\n    constructor(private http: HttpClient) { \n  }\n\n  /**\n   * This method call the all contries form the database.\n   */\n  getContries() {\n    return this.http.get<Contries[]>('/api/countries');\n  }\n\n  /**\n   * This method is used to get all industry types form the API\n   */\n  getIndustryType(){\n    return this.http.get<IndustryTpes[]>('/api/industries');\n  }\n\n  /**\n   * This method is used to get all company sizes from API\n   */\n  getCompanySizes(){\n    return this.http.get<CompanySize[]>('/api/companysize');\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new hero to the database */\n  registerUser (user: RegisterUser) {\n    return this.http.post(\"/api/register\", user, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      error);\n  }\n}\n","module.exports = \".pass_show {\\n  position: relative;\\n}\\n\\n.pass_show .ptxt {\\n\\n  position: absolute;\\n\\n  top: 50%;\\n\\n  right: 10px;\\n\\n  z-index: 1;\\n\\n  color: #f36c01;\\n\\n  margin-top: -10px;\\n\\n  cursor: pointer;\\n\\n  transition: .3s ease all;\\n\\n}\\n\\n.pass_show .ptxt:hover {\\n  color: #333333;\\n}\\n\\nfooter[_ngcontent-c1] {\\n  bottom: 0;\\n  width: 100%;\\n  position: absolute;\\n  height: 60px;\\n  background-color: black;\\n}\\n\\n.head_align{\\n  align-items: center\\n}\\n\\n\"","module.exports = \"<app-header></app-header>\\n\\n<div class=\\\"container\\\" style=\\\"margin: 100px\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n    </div>\\n    <div class=\\\"col-sm-4\\\" style=\\\"height: 320px; \\\">\\n      <form (ngSubmit)=\\\"resetPass()\\\" #ForgetPasswordForm=\\\"ngForm\\\" >\\n      <div style=\\\"align-content: center\\\">\\n        <h3 >Reset Password</h3>\\n      </div>\\n      <label style=\\\"float: left;\\\">New Password</label>\\n      <div class=\\\"form-group pass_show\\\">\\n        <input type=\\\"password\\\" value=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"New Password\\\" required [(ngModel)]=\\\"forget_pass_model.password\\\"\\n        pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\\\" name=\\\"password\\\"\\n        #password=\\\"ngModel\\\"  >\\n        <div *ngIf=\\\"password.touched\\\" class=\\\"text-danger\\\">\\n          <div *ngIf=\\\"password.errors?.required\\\">\\n            Password is required\\n          </div>\\n          <div *ngIf=\\\"password.errors?.pattern\\\">\\n            Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\\n          </div>\\n        </div>\\n      </div>\\n      <label style=\\\"float: left;\\\">Confirm Password</label>\\n      <div class=\\\"form-group pass_show\\\">\\n        <input type=\\\"password\\\" value=\\\"\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" required [(ngModel)]=\\\"forget_pass_model.cpassword\\\" \\n        pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\\\"  name=\\\"cpassword\\\"\\n        #cpassword=\\\"ngModel\\\" >\\n        <div *ngIf=\\\"cpassword.touched\\\" class=\\\"text-danger\\\">\\n          <div *ngIf=\\\"cpassword.errors?.required\\\">\\n            Password is required\\n          </div>\\n          <div *ngIf=\\\"cpassword.errors?.pattern\\\">\\n            Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\\n          </div>\\n        </div>\\n      </div>\\n      <div style=\\\"align-self: center\\\">\\n        <button type=\\\"submit\\\" style=\\\"background-color: #286090;color: white;padding: 10px;\\\" [disabled]=\\\"!ForgetPasswordForm.form.valid\\\" >Submit</button>\\n      </div>\\n      <br />\\n      <br />\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastService } from '../toast.service';\nimport { PasswordService } from '../forgetpassword/password.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nclass ForgetPassword {\n  // Password models\n  password: string ;\n  cpassword: string ;\n}\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\n\nexport class ResetpasswordComponent implements OnInit {\n\n  // Forget password model\n  forget_pass_model = new ForgetPassword();\n  token: string;\n\n  constructor(private router: Router, private toast: ToastService, private activeRoute: ActivatedRoute,\n    private password_service: PasswordService) { }\n\n  ngOnInit() {\n   this.token = this.activeRoute.snapshot.paramMap.get('token');\n  }\n\n  resetPass() {\n    if (this.forget_pass_model. password === this.forget_pass_model.cpassword) {\n\n      // Code for sending the password reset link\n    this.password_service.resetPassword(this.token, this.forget_pass_model.password).subscribe(\n      data => {\n        this.toast.Success('Success', 'Password has been reseted please login again...');\n        this.router.navigateByUrl('/login');\n      },\n      // If any error present\n      (error: HttpErrorResponse) => {\n        if (error == null) {\n        } else {\n          // Parsing the error codes and sending the appropriate responses\n          if (error.status === 404) {\n            this.toast.Error('Invalid Link', 'Password reset link has been expired...');\n            this.router.navigateByUrl('/login');\n          } else if ( error.status === 504) {\n            this.toast.Error('Server Issue', 'Server is not responding!!!');\n          }\n        }\n      });\n    } else {\n      this.toast.Error('Failure', 'Password are not equal...');\n    }\n  }\n}\n","module.exports = \".h1, h1 {\\n    font-size: 20px;\\n}\\n\\n.h1, .h2, .h3, h1, h2, h3 {\\n    margin-top: 5px;\\n    margin-bottom: 5px;\\n}\\n\\n.h4, h4 {\\n    font-size: 30px;\\n}\\n\\nelement.style {\\n    display: block;\\n    width: 450px;\\n    height: 200px;\\n}\\n\\n.category{\\n  margin-bottom: 2em;\\n}\\n\\n.title{\\n  text-align: center;\\n  padding: 3em;\\n}\\n\"","module.exports = \"<app-header1></app-header1>\\n<div id=\\\"report\\\" #report>\\n  <div class=\\\"title\\\">\\n    <h4>DevOps Assessment Report </h4>\\n  </div>\\n  <div class=\\\"container\\\">\\n\\n    <!--Charts column -->\\n    <div class=\\\"col-md-6\\\">\\n\\n      <div class=\\\"row\\\">\\n        <canvas id=\\\"canvas1\\\">{{ chart }}</canvas>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <canvas id=\\\"canvas2\\\">{{ chart2 }}</canvas>\\n      </div>\\n\\n    </div>\\n\\n    <!--Content column-->\\n    <div class=\\\"col-md-6\\\">\\n\\n      <div class=\\\"row category\\\">\\n        <h1>Build</h1>\\n        Build process is combines with build, compile, package, and version code so that it can be redistributed as needed. This would include a Source Repository, Build Console, and Package Repository.\\n      </div>\\n\\n      <div class=\\\"row category\\\">\\n        <h1>Deployment</h1>\\n        Continuous deployment is a strategy for software releases wherein any code commit that passes the automated testing phase is automatically released into the production environment, making changes that are visible to the software's users.\\n      </div>\\n\\n      <div class=\\\"row category\\\">\\n        <h1>Infrastructure</h1>\\n        DevOps is the combination of cultural philosophies, practices, and tools that increases an organization's ability to deliver applications and services at high velocity: evolving and improving products at a faster pace than organizations using traditional software development and infrastructure management processes.\\n      </div>\\n\\n      <div class=\\\"row category\\\">\\n        <h1>Monitoring</h1>\\n        Infrastructure monitoring tools enable organizations to identify and resolve IT infrastructure problems before they can adversely affect critical business processes. They give insight into the status of physical, virtual, and cloud systems and help ensure availability and performance.\\n      </div>\\n\\n      <div class=\\\"row category\\\">\\n        <h1>Process</h1>\\n        DevOps is an enterprise software development phrase used to mean a type of agile relationship between development and IT operations. The goal of DevOps is to change and improve the relationship by advocating better communication and collaboration between these two business units.\\n      </div>\\n\\n      <div class=\\\"row category\\\">\\n        <h1>Technology</h1>\\n        DevOps is the combination of cultural philosophies, practices, and tools that increases an organization's ability to deliver applications and services at high velocity: evolving and improving products at a faster pace than organizations using traditional software development and infrastructure management processes.\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  \\n</div>\\n<div class=\\\"container\\\" style=\\\"margin-bottom: 3em\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary col-md-offset-9\\\" onclick=\\\"window.print()\\\">Print</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"downloadPDF()\\\">Download</button>\\n</div>\"","\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ResultService } from './result.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Chart } from 'chart.js';\nimport html2canvas from 'html2canvas';\nimport * as jsPDF from 'jspdf';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\nexport class ResultComponent implements OnInit {\n\n  chart = [];\n  chart2 = [];\n  user_id: number;\n\n  assessment_id: number;\n\n  constructor(private resultService: ResultService, private router: ActivatedRoute) {\n    this.assessment_id = parseInt(this.router.snapshot.paramMap.get('assessment_id'));\n  }\n\n  ngOnInit() {\n\n    this.resultService.getResult(this.user_id, this.assessment_id)\n      .subscribe(data => {\n        let cat_names = data.map(res => res.question_category.category_name);\n        let cat_scores = data.map(res => res.category_total_score);\n        let cat_maturities = data.map(res => res.resultMaturity.maturity_level);\n        console.info('Result infromation', cat_names, cat_scores, cat_maturities);\n\n\n        this.chart2 = new Chart('canvas2', {\n          type: 'radar',\n          data: {\n            labels: ['Build', 'Deployment', 'Infrastructure', 'Monitoring', 'Process', 'Technology'],\n            datasets: [\n              {\n\n                borderColor: '#3cba9f',\n                fill: false,\n                data: cat_scores,\n                backgroundColor: [\n                  'rgba(255, 99, 132, 0.2)',\n                  'rgba(54, 162, 235, 0.2)',\n                  'rgba(255, 206, 86, 0.2)',\n                  'rgba(75, 192, 192, 0.2)',\n                  'rgba(153, 102, 255, 0.2)',\n                  'rgba(255, 159, 64, 0.2)'\n                ],\n\n              },\n\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n\n            scales: {\n              xAxes: [\n                {\n\n                  display: false\n                }\n              ],\n              yAxes: [\n\n                {\n                  display: false\n                }\n              ]\n            }\n          }\n        });\n        this.chart = new Chart('canvas1', {\n          type: 'bar',\n          data: {\n            labels: ['Build', 'Deployment', 'Infrastructure', 'Monitoring', 'Process', 'Technology'],\n            datasets: [\n              {\n                borderColor: '#3cba9f',\n                fill: true,\n                data: cat_scores,\n                backgroundColor: [\n                  'rgba(255, 99, 132, 0.2)',\n                  'rgba(54, 162, 235, 0.2)',\n                  'rgba(255, 206, 86, 0.2)',\n                  'rgba(75, 192, 192, 0.2)',\n                  'rgba(153, 102, 255, 0.2)',\n                  'rgba(255, 159, 64, 0.2)'\n                ],\n\n              },\n\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n\n            scales: {\n              xAxes: [\n                {\n                  scaleLabel: {\n                    display: true,\n                    labelString: 'Category'\n                  },\n                  gridLines: {\n                    display: false\n                  }\n                }],\n              yAxes: [\n                {\n                  ticks: {\n                    max: 5,\n                    min: 0,\n                    stepSize: 1\n                  },\n\n                  scaleLabel: {\n                    display: true,\n\n                    labelString: 'Maturity'\n                  }\n                }]\n            }\n          }\n        });\n      });\n  }\n\n  public downloadPDF() {\n    var data = document.getElementById('report');\n    html2canvas(data).then(canvas => {\n      // Few necessary setting options.  \n      var imgWidth = 208;\n      var pageHeight = 150;\n      var pageWidth = 150;\n      var imgHeight = canvas.height * imgWidth / canvas.width;\n      var heightLeft = imgHeight;\n\n      const contentDataURL = canvas.toDataURL('image/png')\n      let pdf = new jsPDF('p', 'mm', 'a4'); // A4 size page of PDF  \n      var position = 0;\n      pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\n      pdf.save('report.pdf'); // Generated PDF.\n    });\n  }\n\n\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {  HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from '../../../node_modules/rxjs';\nimport { catchError } from '../../../node_modules/rxjs/operators';\nimport { LoginService } from '../login/login.service';\nimport { CategoryInfo } from '../questionpage/questionpage.service';\n\nexport interface ResultInfo {\n  assessment_result_id: number;\n  category_total_score: number;\n  question_category:CategoryInfo ;\n  resultMaturity: ResultMaturity;\n}\n\nexport interface ResultMaturity{\n  maturity_level: string;\n  result_maturity_id: number ;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResultService {\n \n  user_id: number;\n  \n  constructor(private http:HttpClient,private login: LoginService) {\n    this.user_id = this.login.getLoggedUser()\n   }\n\n  public getResult(user_id:number, assessment_id:number){\n    return this.http.get<ResultInfo[]>('/api/users/'+this.user_id+'/assessments/'+assessment_id+'/result')\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n  \n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      error);\n  }\n}\n","module.exports = \".test1{\\n    margin: 200px;\\n}\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"test1\\\">\\n<h2 style=\\\"font-family: ubuntu;color: rgb(109, 162, 211);\\\"><b>Successfully updated your password</b>\\n</h2>\\n<p style=\\\"font-family: ubuntu;color: red\\\">Please login to start Assessment</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-successfullreset',\n  templateUrl: './successfullreset.component.html',\n  styleUrls: ['./successfullreset.component.css']\n})\nexport class SuccessfullresetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".test1{\\n    margin: 200px;\\n}\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <h2>Terms Of Use </h2>\\n  <p>LAST REVISION: [1st Mar-2018]</p>\\n  <p>\\n    PLEASE READ THIS TERMS OF SERVICE AGREEMENT CAREFULLY. BY USING THIS WEBSITE OR ORDERING SERVICES FROM THIS WEBSITE\\n    YOU AGREE TO BE BOUND BY ALL OF THE TERMS AND CONDITIONS OF THIS AGREEMENT.</p>\\n  <p>\\n    This Terms of Service Agreement (the “Agreement”) governs your use of this website, www.prodevans.com(the\\n    “Website”), PRODEVANS (“Business Name”) offer of services for purchase on this Website, or your purchase of\\n    services available on this Website. This Agreement includes, and incorporates by this reference, the policies and\\n    guidelines referenced below. PRODEVANS reserves the right to change or revise the terms and conditions of this\\n    Agreement at any time by posting any changes or a revised Agreement on this Website. PRODEVANS will alert you that\\n    changes or revisions have been made by indicating on the top of this Agreement the date it was last revised. The\\n    changed or revised Agreement will be effective immediately after it is posted on this Website. Your use of the\\n    Website following the posting any such changes or of a revised Agreement will constitute your acceptance of any\\n    such changes or revisions. PRODEVANS encourages you to review this Agreement whenever you visit the Website to make\\n    sure that you understand the terms and conditions governing use of the Website. This Agreement does not alter in\\n    any way the terms or conditions of any other written agreement you may have with PRODEVANS for other services. If\\n    you do not agree to this Agreement (including any referenced policies or guidelines), please immediately terminate\\n    your use of the Website. If you would like to print this Agreement, please click the print button on your browser\\n    toolbar.\\n  </p>\\n\\n  <h2>SERVICES</h2>\\n  <p>Terms of Offer. This Website offers for sale certain services (the “Services”). By placing an order for Services\\n    through this Website or you ask for services through our ‘contact us’ page, you agree to the terms set forth in\\n    this Agreement.</p>\\n  <p>\\n    Customer Solicitation: Unless you notify our third party call center reps or direct PRODEVANS sales reps, while\\n    they are calling you, of your desire to opt out from further direct company communications and solicitations, you\\n    are agreeing to continue to receive further emails and call solicitations PRODEVANS and its designated in house or\\n    third party call team(s).\\n  </p>\\n  <p>\\n    Opt Out Procedure: We provide 3 easy ways to opt out of from future solicitations. 1. You may use the opt out link\\n    found in any email solicitation that you may receive. 2. You may also choose to opt out, via sending your email\\n    address to: ask@prodevans.com\\n  </p>\\n  <p>\\n    You may send a written remove request to Prodevans Technologies LLP, Building # 389, Second Floor,8th Main,7th\\n    Cross, MICO Layout, BTM 2nd stage, Bengaluru-560076.\\n  </p>\\n  <p>\\n    Proprietary Rights. PRODEVANS has proprietary rights and trade secrets in the Services. You may not copy,\\n    reproduce, resell or redistribute any Services provided and/or distributed by PRODEVANS. PRODEVANS also has rights\\n    to all trademarks and trade dress and specific layouts of this webpage, including calls to action, text placement,\\n    images and other information.\\n  </p>\\n  <p>\\n    Taxes. If you purchase any Services, you will be responsible for paying any applicable taxes.\\n  </p>\\n\\n  <h2>WEBSITE</h2>\\n  <p>\\n    Content; Intellectual Property; Third Party Links. In addition to making Services available, this Website also\\n    offers information and marketing materials. This Website also offers information, both directly and through\\n    indirect links to third-party websites, about consulting services. PRODEVANS does not always create the information\\n    offered on this Website; instead the information is often gathered from other sources. To the extent that PRODEVANS\\n    does create the content on this Website, such content is protected by intellectual property laws of the India,\\n    foreign nations, and international bodies. Unauthorized use of the material may violate copyright, trademark,\\n    and/or other laws. You acknowledge that your use of the content on this Website is for personal, noncommercial use.\\n    Any links to third-party websites are provided solely as a convenience to you. PRODEVANS does not endorse the\\n    contents on any such third-party websites. PRODEVANS is not responsible for the content of or any damage that may\\n    result from your access to or reliance on these third-party websites. If you link to third-party websites, you do\\n    so at your own risk.\\n  </p>\\n  <p>\\n    Use of Website; PRODEVANS is not responsible for any damages resulting from use of this website by anyone. You will\\n    not use the Website for illegal purposes. You will (1) abide by all applicable local, state, national, and\\n    international laws and regulations in your use of the Website (including laws regarding intellectual property), (2)\\n    not interfere with or disrupt the use and enjoyment of the Website by other users, (3) not resell material on the\\n    Website, (4) not engage, directly or indirectly, in transmission of “spam”, chain letters, junk mail or any other\\n    type of unsolicited communication, and (5) not defame, harass, abuse, or disrupt other users of the Website\\n  </p>\\n  <p>\\n    License. By using this Website, you are granted a limited, non-exclusive, non-transferable right to use the content\\n    and materials on the Website in connection with your normal, noncommercial, use of the Website. You may not copy,\\n    reproduce, transmit, distribute, or create derivative works of such content or information without express written\\n    authorization from PRODEVANS or the applicable third party (if third party content is at issue).\\n  </p>\\n  <p>\\n    Posting. By posting, storing, or transmitting any content on the Website, you hereby grant PRODEVANS a perpetual,\\n    worldwide, non-exclusive, royalty-free, assignable, right and license to use, copy, display, perform, create\\n    derivative works from, distribute, have distributed, transmit and assign such content in any form, in all media now\\n    known or hereinafter created, anywhere in the world. PRODEVANS does not have the ability to control the nature of\\n    the user-generated content offered through the Website. You are solely responsible for your interactions with other\\n    users of the Website and any content you post. PRODEVANS is not liable for any damage or harm resulting from any\\n    posts by or interactions between users. PRODEVANS reserves the right, but has no obligation, to monitor\\n    interactions between and among users of the Website and to remove any content PRODEVANS deems objectionable, in\\n    PRODEVANS ‘s sole discretion.\\n  </p>\\n\\n  <h2> DISCLAIMER OF WARRANTIES</h2>\\n  <p>\\n    YOUR USE OF THIS WEBSITE AND/OR CONTENTSS OR SERVICES ARE AT YOUR SOLE RISK. THE WEBSITE AND CONTENTS OR SERVICES\\n    ARE OFFERED ON AN “AS IS” AND “AS AVAILABLE” BASIS. PRODEVANS EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,\\n    WHETHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\\n    PARTICULAR PURPOSE AND NON-INFRINGEMENT WITH RESPECT TO THE CONTENTS OR WEBSITE CONTENT, OR ANY RELIANCE UPON OR\\n    USE OF THE WEBSITE CONTENT OR SERVICES\\n  </p>\\n  <p>\\n    WITHOUT LIMITING THE GENERALITY OF THE FOREGOING, PRODEVANS MAKES NO WARRANTY:\\n  </p>\\n  <p>\\n    THAT THE INFORMATION PROVIDED ON THIS WEBSITE IS ACCURATE, RELIABLE, COMPLETE, OR TIMELY.\\n  </p>\\n  <p>\\n    THAT THE LINKS TO THIRD-PARTY WEBSITES ARE TO INFORMATION THAT IS ACCURATE, RELIABLE, COMPLETE, OR TIMELY.\\n  </p>\\n  <p>\\n    NO ADVICE OR INFORMATION, WHETHER ORAL OR WRITTEN, OBTAINED BY YOU FROM THIS WEBSITE WILL CREATE ANY WARRANTY NOT\\n    EXPRESSLY STATED HEREIN.\\n  </p>\\n  <p>\\n    AS TO THE RESULTS THAT MAY BE OBTAINED FROM THE USE OF THE CONTENTS OR THAT DEFECTS IN CONTENTS WILL BE CORRECTED.\\n  </p>\\n  <p>\\n    REGARDING ANY SERVICES PURCHASED OR OBTAINED THROUGH THE WEBSITE.\\n  </p>\\n  <p>\\n    SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF CERTAIN WARRANTIES, SO SOME OF THE ABOVE EXCLUSIONS MAY NOT APPLY\\n    TO YOU.\\n  </p>\\n\\n\\n  <h2>LIMITATION OF LIABILITY</h2>\\n  <p>\\n    PRODEVANS ENTIRE LIABILITY, AND YOUR EXCLUSIVE REMEDY, IN LAW, IN EQUITY, OR OTHWERWISE, WITH RESPECT TO THE\\n    WEBSITE CONTENT AND SERVICES AND/OR FOR ANY BREACH OF THIS AGREEMENT IS SOLELY LIMITED TO THE AMOUNT YOU PAID, LESS\\n    SHIPPING AND HANDLING, FOR SERVICES PURCHASED VIA THE WEBSITE.\\n  </p>\\n  <p>\\n    PRODEVANS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES IN CONNECTION\\n    WITH THIS AGREEMENT OR THE SERVICES IN ANY MANNER, INCLUDING LIABILITIES RESULTING FROM (1) THE USE OR THE\\n    INABILITY TO USE THE WEBSITE CONTENT OR SERVICES; (2) THE COST OF PROCURING SUBSTITUTE SERVICES OR CONTENT; (3) ANY\\n    SERVICES PURCHASED OR OBTAINED OR TRANSACTIONS ENTERED INTO THROUGH THE WEBSITE; OR (4) ANY LOST PROFITS YOU\\n    ALLEGE.\\n  </p>\\n  <p>\\n    SOME JURISDICTIONS DO NOT ALLOW THE LIMITATION OR EXCLUSION OF LIABILITY FOR INCIDENTAL OR CONSEQUENTIAL DAMAGES SO\\n    SOME OF THE ABOVE LIMITATIONS MAY NOT APPLY TO YOU.\\n  </p>\\n  <h2>INDEMNIFICATION</h2>\\n  <p>\\n    You will release, indemnify, defend and hold harmless PRODEVANS, and any of its contractors, agents, employees,\\n    officers, directors, shareholders, affiliates and assigns from all liabilities, claims, damages, costs and\\n    expenses, including reasonable attorneys’ fees and expenses, of third parties relating to or arising out of (1)\\n    this Agreement or the breach of your warranties, representations and obligations under this Agreement; (2) the\\n    Website content or your use of the Website content; (3) the Services or your use of the Services; (4) any\\n    intellectual property or other proprietary right of any person or entity; (5) your violation of any provision of\\n    this Agreement; or (6) any information or data you supplied to PRODEVANS. When PRODEVANS is threatened with suit or\\n    sued by a third party, PRODEVANS may seek written assurances from you concerning your promise to indemnify\\n    PRODEVANS; your failure to provide such assurances may be considered by PRODEVANS to be a material breach of this\\n    Agreement. PRODEVANS will have the right to participate in any defense by you of a third-party claim related to\\n    your use of any of the Website content or Services, with counsel of PRODEVANS choice at its expense. PRODEVANS will\\n    reasonably cooperate in any defense by you of a third-party claim at your request and expense. You will have sole\\n    responsibility to defend PRODEVANS against any claim, but you must receive PRODEVANS prior written consent\\n    regarding any related settlement. The terms of this provision will survive any termination or cancellation of this\\n    Agreement or your use of the Website or Services.\\n  </p>\\n\\n  <h2>PRIVACY</h2>\\n  <p>\\n    PRODEVANS believes strongly in protecting user privacy and providing you with notice of PRODEVANS’ use of data.\\n    Please refer to PRODEVANS privacy policy, incorporated by reference herein that is posted on the Website.\\n  </p>\\n\\n  <h2> AGREEMENT TO BE BOUND</h2>\\n  <p>By using this Website or ORDERING SERVICES, you acknowledge that you have read and agree to be bound by this\\n    Agreement and all terms and conditions on this Website.\\n  </p>\\n  <h2>GENERAL</h2>\\n  <p>Force Majeure. PRODEVANS will not be deemed in default hereunder or held responsible for any cessation,\\n    interruption or delay in the performance of its obligations hereunder due to earthquake, flood, fire, storm,\\n    natural disaster, act of God, war, terrorism, armed conflict, labor strike, lockout, or boycott.\\n  </p>\\n  <p>\\n    Cessation of Operation. PRODEVANS may at any time, in its sole discretion and without advance notice to you, cease\\n    operation of the Website and distribution of the Contents.\\n  </p>\\n  <P>\\n    Entire Agreement. This Agreement comprises the entire agreement between you and PRODEVANS and supersedes any prior\\n    agreements pertaining to the subject matter contained herein.\\n  </P>\\n  <p>\\n    Effect of Waiver. The failure of PRODEVANS to exercise or enforce any right or provision of this Agreement will not\\n    constitute a waiver of such right or provision. If any provision of this Agreement is found by a court of competent\\n    jurisdiction to be invalid, the parties nevertheless agree that the court should endeavor to give effect to the\\n    parties’ intentions as reflected in the provision, and the other provisions of this Agreement remain in full force\\n    and effect.\\n  </p>\\n  <p>\\n    Governing Law; Jurisdiction. This Website originates from the Bangalore, Karnataka. This Agreement will be governed\\n    by the laws of the State of Karnataka without regard to its conflict of law principles to the contrary. Neither you\\n    nor PRODEVANS will commence or prosecute any suit, proceeding or claim to enforce the provisions of this Agreement,\\n    to recover damages for breach of or default of this Agreement, or otherwise arising under or by reason of this\\n    Agreement, other than in courts located in State of Karnataka. By using this Website or ORDERING SERVICES, you\\n    consent to the jurisdiction and venue of such courts in connection with any action, suit, proceeding or claim\\n    arising under or by reason of this Agreement. You hereby waive any right to trial by jury arising out of this\\n    Agreement and any related documents.\\n  </p>\\n  <p>\\n    Statute of Limitation. You agree that regardless of any statute or law to the contrary, any claim or cause of\\n    action arising out of or related to use of the Website or Contents or this Agreement must be filed within one (1)\\n    year after such claim or cause of action arose or be forever barred.\\n  </p>\\n  <p>\\n    Waiver of Class Action Rights. BY ENTERING INTO THIS AGREEMENT, YOU HEREBY IRREVOCABLY WAIVE ANY RIGHT YOU MAY HAVE\\n    TO JOIN CLAIMS WITH THOSE OF OTHER IN THE FORM OF A CLASS ACTION OR SIMILAR PROCEDURAL DEVICE. ANY CLAIMS ARISING\\n    OUT OF, RELATING TO, OR CONNECTION WITH THIS AGREEMENT MUST BE ASSERTED INDIVIDUALLY.\\n  </p>\\n  <p>\\n    Termination. PRODEVANS reserves the right to terminate your access to the Website if it reasonably believes, in its\\n    sole discretion, that you have breached any of the terms and conditions of this Agreement. Following termination,\\n    you will not be permitted to use the Website and PRODEVANS may, in its sole discretion and without advance notice\\n    to you, cancel any outstanding orders for Services. If your access to the Website is terminated, PRODEVANS reserves\\n    the right to exercise whatever means it deems necessary to prevent unauthorized access of the Website. This\\n    Agreement will survive indefinitely unless and until PRODEVANS chooses, in its sole discretion and without advance\\n    to you, to terminate it.\\n  </p>\\n  <p>\\n    Domestic Use. PRODEVANS makes no representation that the Website or Contents are appropriate or available for use\\n    in locations outside India. Users who access the Website from outside India do so at their own risk and initiative\\n    and must bear all responsibility for compliance with any applicable local laws.\\n  </p>\\n  <p>\\n    Assignment. You may not assign your rights and obligations under this Agreement to anyone. PRODEVANS may assign its\\n    rights and obligations under this Agreement in its sole discretion and without advance notice to you.\\n  </p>\\n  <p>\\n    BY USING THIS WEBSITE OR ORDERING OR SERVICES FROM THIS WEBSITE OR CONTACTING US THROUGH ANY OTHER THIRD PARTY APPS\\n    OR WEBSITE, YOU AGREE TO BE BOUND BY ALL OF THE TERMS AND CONDITIONS OF THIS AGREEMENT.\\n  </p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.css']\n})\nexport class TermsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(private toast: ToastrService) { }\n\n  public Success(title:string, message:string){\n    this.toast.success( message,title);\n  }\n\n  public Error(title:string, message:string){\n    this.toast.error(message,title);\n  }\n\n  public Info(title:string, message:string){\n    this.toast.info( message,title);\n  }\n\n  public Warning(title:string, message:string){\n    this.toast.warning( message,title);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:'http://localhost:8080'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}